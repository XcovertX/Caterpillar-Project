generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model address {
  id                                                                   BigInt                @id @default(autoincrement())
  street_address                                                       String                @db.VarChar(255)
  city                                                                 String                @db.VarChar(50)
  state                                                                String                @db.VarChar(2)
  zipcode                                                              String?               @db.VarChar(5)
  country                                                              String                @db.VarChar(50)
  contact_information_contact_information_billing_address_idToaddress  contact_information[] @relation("contact_information_billing_address_idToaddress")
  contact_information_contact_information_shipping_address_idToaddress contact_information[] @relation("contact_information_shipping_address_idToaddress")
  order                                                                order[]
}

model contact_information {
  id                                                       BigInt    @id @default(autoincrement())
  email                                                    String    @db.VarChar(100)
  phone                                                    String    @db.VarChar(10)
  shipping_address_id                                      BigInt
  billing_address_id                                       BigInt
  admin                                                    admin?
  address_contact_information_billing_address_idToaddress  address   @relation("contact_information_billing_address_idToaddress", fields: [billing_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "billing_address_id_fkey")
  address_contact_information_shipping_address_idToaddress address   @relation("contact_information_shipping_address_idToaddress", fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shipping_address_id_fkey")
  customer                                                 customer?

  @@unique([id, email])
}

model order {
  id                      BigInt   @id @default(autoincrement())
  tracking_number         String   @db.VarChar(14)
  shipped_from_address_id BigInt
  purchase_date           DateTime @db.Date
  estimated_delivery_date DateTime @db.Date
  product_id              BigInt
  quantity                Int
  customer_id             BigInt
  total                   Decimal  @db.Decimal(10, 2)
  customer                customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product                 product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  address                 address  @relation(fields: [shipped_from_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer {
  id                     BigInt              @id(map: "customer_id_pkey") @default(autoincrement())
  first_name             String              @db.VarChar(50)
  last_name              String              @db.VarChar(50)
  contact_information_id BigInt              @unique
  card_id                BigInt              @unique
  password               String              @db.VarChar(255)
  created_date           DateTime            @db.Date
  user_type              String              @db.VarChar(10)
  card_information       card_information    @relation(fields: [card_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contact_information    contact_information @relation(fields: [contact_information_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order                  order[]
}

model card_information {
  id          BigInt    @id @default(autoincrement())
  card_number String    @db.VarChar(16)
  card_type   String    @db.VarChar(16)
  customer    customer?
}

model inventory {
  id      BigInt    @id
  product product[]
}

model product {
  id           BigInt    @id @default(autoincrement())
  product_name String    @db.VarChar(50)
  price        Decimal   @db.Decimal(10, 2)
  inventory_id BigInt
  order        order[]
  inventory    inventory @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_inventory_id")
}

model admin {
  admin_id               BigInt              @id @default(autoincrement())
  first_name             String              @db.VarChar(50)
  last_name              String              @db.VarChar(50)
  contact_information_id BigInt              @unique
  password               String              @db.VarChar(100)
  user_type              String              @db.VarChar(10)
  contact_information    contact_information @relation(fields: [contact_information_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
